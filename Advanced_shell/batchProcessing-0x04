#!/bin/bash

# Directory to store the data
OUTPUT_DIR="pokemon_data"
mkdir -p "$OUTPUT_DIR"

# List of Pokémon to fetch
POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch data for a single Pokémon
fetch_pokemon() {
    local pokemon=$1
    echo "Fetching data for $pokemon..."
    curl -s "https://pokeapi.co/api/v2/pokemon/$pokemon" -o "$OUTPUT_DIR/$pokemon.json"
    if [ $? -eq 0 ]; then
        echo "Saved data to $OUTPUT_DIR/$pokemon.json ✅"
    else
        echo "Failed to fetch data for $pokemon ❌"
    fi
}

# Trap to clean up background jobs if script is interrupted
trap "echo 'Stopping all background jobs...'; jobs -p | xargs kill 2>/dev/null" SIGINT SIGTERM

# Fetch Pokémon data in parallel
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon" &
done

# Show background jobs
jobs

# Wait for all jobs to complete
wait

# Final message
echo "All Pokémon data fetched successfully."